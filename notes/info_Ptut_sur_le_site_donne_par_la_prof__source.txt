R.cerda est un robot à conduite différentielle basé sur un Raspberry Pi, 
pensé pour être à la fois simple et économique. 
Il est propulsé par deux moteurs à courant continu, commandés par des puces L293D et interfacées aux GPIO du Raspberry Pi par un MCP23017. 
Une puce MCP3008 permet de lire d'ajouter des entrées analogiques au Raspberry Pi. 

Capteurs et détection des obstacles:
Le principe du fonctionnement est donc d'éviter les obstacles détectés. Pour cela, 
j'utilise un Maxbotix LV-EZ4, qui détecte les objets grâce à un faisceau à ultrasons entre 6 pouces (environ 15cm) et 6 mètres.
Le capteur ayant une sortie linéaire, la mesure est directement proportionnelle à la distance

Algorithme basique d'évitement d'obstacles : r1.py

Lire la distance mesurée devant le robot par le capteur à ultrasons.
Si cette distance est inférieure à 8 pouces, on recule.
Sinon, si cette distance est inférieure à 16 pouces, on tourne,
Sinon, on avance.




Il y a déjà un tutoriel sur l'utilisation de la puce L293D pour commander un ou deux moteurs avec le Raspberry Pi sur NextInpact
(je met le lien mais c'est celui qui ne marche pas)
forum.pcinpact.com/topic/165594-raspberry-pi-fabriquons-des-trucs/page__view__findpost__p__2748806

la y a des vrai info qui doivent corespondre au truck en question faut juste le suivre en cas de probleme avec Raspberry Pi
("Voici le paramétrage minimum d’une Raspberry Pi pour pouvoir contrôler des moteurs dynamixel avec une carte PIXL.")
http://www.roboticia.com/?page_id=197




Le programme du robot est alors assez simple, puisqu'il s'agit de l'algo suivant :

boucle infinie :
distanceObstacle=lireDistanceCapteurUltrasons();
Si (distanceObstacle<8 pouces) reculer;
Sinon Si (distanceObstacle<12 pouces) tourner à gauche;
Sinon avancer;
Attendre(5ms);



Source:
http://www.roboticia.com/?page_id=197
http://nagashur.com/wiki/doku.php?id=robotique:r_cerda:start